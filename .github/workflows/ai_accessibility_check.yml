name: AI Accessibility Check

# This workflow can run with or without the MODELS_TOKEN secret
# For full AI analysis, get your GitHub Models token from: https://github.com/marketplace/models
# Add it as a repository secret named: MODELS_TOKEN
# Without the token, the workflow will run in mock analysis mode

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # Allow manual triggering

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  ai-accessibility-check:
    name: AI-Powered Accessibility Analysis
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Python dependencies
        run: |
          pip install requests

      - name: Check for MODELS_TOKEN (optional)
        run: |
          if [ -z "${{ secrets.MODELS_TOKEN }}" ]; then
            echo "::notice::MODELS_TOKEN secret is not configured. Running in mock analysis mode."
            echo "::notice::For full AI analysis, add the MODELS_TOKEN secret to your repository settings."
            echo "::notice::Get your token from: https://github.com/marketplace/models"
          else
            echo "::notice::MODELS_TOKEN found. Running with full AI analysis."
          fi

      - name: Run AI accessibility analysis
        env:
          MODELS_TOKEN: ${{ secrets.MODELS_TOKEN }}
        run: |
          python ai_accessibility_analyzer.py

      - name: Display AI analysis results
        run: |
          echo "=== AI Accessibility Analysis Results ==="
          if [ -f ai_accessibility_report.md ]; then
            cat ai_accessibility_report.md
          else
            echo "No report generated"
          fi

      - name: Upload AI analysis results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: ai-accessibility-analysis
          path: |
            ai_accessibility_results.json
            ai_accessibility_report.md

      - name: Comment on PR with AI analysis
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            let report = '';
            
            try {
              report = fs.readFileSync('ai_accessibility_report.md', 'utf8');
            } catch (e) {
              report = 'AI accessibility analysis failed to generate report.';
            }
            
            const comment = `## ü§ñ AI-Powered Accessibility Analysis
            
            *Analyzed using GPT-4o via GitHub Models - Advanced AI accessibility audit*
            
            <details>
            <summary>üîç Click to view detailed AI accessibility analysis</summary>
            
            ${report}
            
            </details>
            
            **üí° Note:** This AI analysis uses GPT-4o's advanced reasoning capabilities to provide comprehensive accessibility insights. It should be used alongside dedicated accessibility testing tools like axe-core and Pa11y for complete coverage.
            
            **üöÄ Powered by GitHub Models** - Fast, reliable AI analysis integrated directly into your workflow.`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
